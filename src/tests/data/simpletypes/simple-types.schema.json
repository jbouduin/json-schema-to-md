{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://example.com/schemas/simple-types",
  "title": "Simple Types",
  "type": "object",
  "description": "This is an example schema with examples for all simple types and their constraints.",
  "properties": {
    "string_unconstrained": {
      "type": "string",
      "title": "Unconstrained string",
      "description": "A simple string, without any constraints.",
      "examples": ["bar"]
    },
    "string_length": {
      "type": "string",
      "description": "A string with minumum and maximum length",
      "examples": ["bar", "baz"],
      "minLength": 3,
      "maxLength": 3
    },
    "string_pattern": {
      "type": "string",
      "description": "A string following a regular expression",
      "pattern": "^ba.$",
      "examples": ["bar", "baz", "bat"],
      "meta:enum": {
        "baa": "the sounds of sheeps",
        "bad": "German bathroom",
        "bag": "holding device",
        "bah": "humbug!",
        "bam": "a loud sound",
        "ban": "don't do this",
        "bap": "a British soft bread roll",
        "bas": "from ancient Egyptian religion, an aspect of the soul",
        "bat": "â€¦out of hell",
        "bay": ", sitting by the dock of the"
      }
    },
    "string_pattern_noexample": {
      "type": "string",
      "description": "A string following a regular expression",
      "pattern": "^ba.$"
    },
    "string_pattern_singleexample": {
      "type": "string",
      "description": "A string following a regular expression",
      "pattern": "^ba.$",
      "examples": ["bar"]
    },
    "string_date": {
      "type": "string",
      "title": "Date-Time",
      "description": "A date-time string.",
      "format": "date-time",
      "testProperty": "test"
    },
    "string_date_only": {
      "type": "string",
      "title": "Date",
      "description": "A date string",
      "format": "date"
    },
    "string_duration": {
      "type": "string",
      "title": "Duration",
      "description": "A duration string",
      "format": "duration"
    },
    "string_idnemail": {
      "type": "string",
      "title": "idn Email",
      "description": "A string representing an idn Email",
      "format": "idn-email"
    },
    "string_idnhostname": {
      "type": "string",
      "title": "idn-hostname",
      "description": "A string representing an idn hostname",
      "format": "idn-hostname"
    },
    "string_iri": {
      "type": "string",
      "title": "iri",
      "description": "A string representing an iri",
      "format": "iri"
    },
    "string_iri_reference": {
      "type": "string",
      "title": "iri-reference",
      "description": "A string representing an iri reference",
      "format": "iri-reference"
    },
    "string_json_pointer": {
      "type": "string",
      "title": "json-pointer",
      "description": "A string representing a json pointer",
      "format": "json-pointer"
    },
    "string_json_relative_pointer": {
      "type": "string",
      "title": "json-relative-pointer",
      "description": "A string representing a relative json pointer",
      "format": "relative-json-pointer"
    },
    "string_time": {
      "type": "string",
      "title": "time",
      "description": "A time string",
      "format": "time"
    },
    "string_uri_template": {
      "type": "string",
      "title": "uri-template",
      "description": "A string representing a templated URI",
      "format": "uri-template"
    },
    "string_uri_reference": {
      "type": "string",
      "title": "uri-reference",
      "description": "A string representing a reference URI",
      "format": "uri-reference"
    },
    "string_uuid": {
      "type": "string",
      "title": "uuid",
      "description": "A string representing a uuid",
      "format": "uuid"
    },
    "string_regex": {
      "type": "string",
      "title": "regex",
      "description": "A Regular Expression",
      "format": "regex"
    },
    "string_email": {
      "type": "string",
      "title": "email",
      "description": "An email-like string",
      "format": "email"
    },
    "string_hostname": {
      "type": "string",
      "title": "hostname",
      "description": "A hostname",
      "format": "hostname"
    },
    "string_ipv4": {
      "type": "string",
      "title": "ipv4",
      "description": "An IPv4 IP-Address",
      "format": "ipv4"
    },
    "string_ipv6": {
      "type": "string",
      "title": "ipv6",
      "description": "An IPv6 IP-Address",
      "format": "ipv6"
    },
    "string_uri": {
      "type": "string",
      "title": "URI",
      "description": "A URI.",
      "format": "uri"
    },
    "string_other": {
      "type": "string",
      "title": "unknown",
      "description": "Unknown format.",
      "format": "unknown"
    },
    "number_unconstrained": {
      "type": "number",
      "title": "Unconstrained number",
      "description": "Just a number"
    },
    "integer_unconstrained": {
      "type": "integer",
      "title": "Integer",
      "description": "Just a whole number. Fractions are useless."
    },
    "integer_constrained": {
      "type": "integer",
      "title": "Constrained integer",
      "description": "To be considered adult",
      "minimum": 18
    },
    "number_constrained": {
      "type": "number",
      "title": "A Constrained number excluding the limits",
      "description": "The 20th century is from - to",
      "exclusiveMaximum": 2000,
      "exclusiveMinimum": 1899
    },
    "integer_threes": {
      "type":"integer",
      "title": "Multiple of constraint",
      "description": "Leap years of the 20th century",
      "multipleOf": 5,
      "exclusiveMinimum": 1900,
      "exclusiveMaximum": 2000,
      "maximum": 4
    },
    "yesno": {
      "type": "boolean",
      "title": "Boolean",
      "description": "we called it yesno, so noobs do understand what we mean"
    }
  },
  "required": [
    "yesno"
  ]
}
